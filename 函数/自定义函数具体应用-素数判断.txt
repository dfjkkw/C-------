//自定义函数具体应用-素数判断
//如何编写一个素数判定函数
#include<iostream>
#include<math.h>
using namespace std;
bool IsPrime1(unsigned int n)
{
	if (n == 0 || n == 1)return false;
	for (int i = 2;i < n;i++)//判断是不是素数
	{
		if (n % i == 0)return false;
	}
	return true;//按此流程若n为2也返回true
}
bool IsPrime2(unsigned int n)
{
	if (n == 0 || n == 1)return false;
	int root = sqrt(n);
	for (int i = 2;i <= root;i++)//判断是不是素数
	{
		if (n % i == 0)return false;
	}
	return true;//按此流程若n为2也返回true
}
int main(void)
{
	//int num[5] = { 11 ,12 ,13,14,15 };
	//for (int i = 0;i < 5;i++)
	//{
	//	if (IsPrime2(num[i]) != 0)cout << num[i] << "是素数" << endl;
	//	else cout << num[i] << "不是素数" << endl;
	//}
	int n;
	char choice;
	do {
		cout << "请输入一个数：";
		cin >> n;
		cout <<n <<( IsPrime2(n) ? "" : "不" )<< "是一个素数" << endl;
		cout << "是否继续判断其他正整数?（y/n）：";
		cin >> choice;
	} while (choice == 'y' || choice == 'Y');
	cout << "谢谢使用，再见" << endl;
	return 0;
}