//栈
/*
空栈
______________________________
|____________________________|
栈底                          栈顶
压入元素
______________________________
|_元素一______________________|
栈底                          栈顶
压入元素
______________________________
|_元素一，元素二_______________|
栈底                          栈顶
弹出元素
______________________________
|_元素一_______________________|
栈底                          栈顶
压入元素
______________________________
|_元素一，元素三_______________|
栈底                          栈顶
弹出元素
______________________________
|_元素一_______________________|
栈底                          栈顶
弹出元素
______________________________
|_____________________________|
栈底                          栈顶
*/
#include<iostream>
#include<stack>
#include<time.h>
using namespace std;
int main(void)
{
	int n;
	stack<int>st;
	srand(time(0));
	for (int i = 0;i < 8;i++)
	{
		//前三轮循环只进栈不出栈，前三轮过后随即决定入栈还是出栈
		if (i < 3||rand()&1)//注意“位与”运算符&,rand()&1实际上是取一随机数并判断其奇偶
		{
			cout << "请往栈内添加一个新的整数：";
			cin >> n;
			st.push(n);//push()函数是新元素入栈的操作方式
		}
		else {
			if (st.empty())
			{
				cout << "此时栈内没有元素"<<endl;
			}
			else {
				cout << "弹出栈顶元素：" << st.top() << endl;//top()函数供我们取出栈顶元素
				st.pop();//pop()函数的作用是弹出栈顶元素
			}
		}
	}
	while (!st.empty())
	{
		cout << "弹出栈顶元素：" << st.top() << endl;
		st.pop();
	}
	cout << "此时栈内没有元素" << endl;
	return 0;
}