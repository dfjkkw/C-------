//位运算（只针对整数进行，浮点数没办法进行位运算）
//二进制是计算机内部处理数据的基本方式，一个二进制数位成为一个位(bit)。如5在二进制中表示位101，这里的一个0和两个1就是3个“位”
//位右移 >>将一个整数按照二进制写法每一位向右移动，得到一个新的数，最右位被舍弃
//位左移 <<将一个整数按照二进制写法每一位向左移动，得到一个新的数，最后一位加0
//位与 & 用两个整数进行运算.两个整数写成二进制，在两数的同一位上，如果都为1，该位应当置1；若任一该数位为0，则该置0.
//位或 | 用两个整数进行运算.两个整数写成二进制，在两数的同一位上，如果都为0，该位应当置0；若任一该数位为1，则该置1.
//位异或 ^ 用两个整数进行运算.两个整数写成二进制，在两数的同一位上，如果不同，该位应当置1；若两个都为1或两个都为0，则该置0.
#include<iostream>
using namespace std;
int main()
{
	int a = 10, b;
	b = a >> 1;
	cout <<"b= " << b << endl;//5
	a = 7;
	b = a << 1;
	cout << "b= " << b << endl;//14
	a <<= 1;//a=a<<1;
	cout << "a= " << a << endl;//14
	a = 9, b = 3;
	cout <<"a&b= " << (a & b) << endl;//1
	cout << "a|b= " << (a | b) << endl;//11
	cout << "a^b= " << (a ^ b) << endl;//10
	return 0;
}