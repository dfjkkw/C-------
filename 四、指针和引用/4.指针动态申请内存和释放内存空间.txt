/*如果我们建立了一个指针之后，并不想让这个指针指向某个我们已经在使用的内存，
而是想让它指向一个新的内存供我们使用，这就需要用到new语句。
用过之后，应该用delete语句释放掉它先前所占用的内存空间*/
//指针动态申请内存和释放内存空间
#include<iostream>
using namespace std;
int main()
{
	int* p;
	p = new int;//编译器会开辟内存空间
	*p = 10;
	cout << *p << endl;
	delete p;//释放内存
	p = NULL;
	//重新开辟内存空间才能使用指针p
	p = new int;
	*p = 20;
	cout << *p << endl;
	int len;
	cout << "请输入一维数组长度：" ;
	cin >> len;
	int *shuzu1 = new int[len];
	for (int i = 0;i < len;i++)
	{
		shuzu1[i] = i + 1;
	}
	cout << "输出动态数组：" << endl;
	for (int i = 0;i < len;i++)
	{
		cout << shuzu1[i] << "\t";
	}
	cout << endl;
	delete []shuzu1;//对数组释放
	int row, col;
	cout << "请输入二维数组行数：";cin >> row;
	cout << "请输入二维数组列数：";cin >> col;
	//得到一维指针后：p[n]=new int[列数],这里n是一个表示行号的下标
	int** shuzu2;
	shuzu2 = new int* [row];
	for (int i = 0;i < row;i++)
	{
		shuzu2[i] = new int[col];
		for (int j = 0;j < col ;j++)
		{
			shuzu2[i][j] = i * col + j;
		}
	}
	for (int i = 0;i < row;i++)
	{
		for (int j = 0;j < col;j++)
		{
			cout << shuzu2[i][j] << "\t";
		}
		cout << endl;
	}
	//对数组释放
	for (int i = 0;i < row;i++)
	{
		delete[]shuzu2[i];
	}
	delete []shuzu2;
	return 0;
}